apiVersion: v1
kind: Namespace
metadata:
  name: crud-app
---

apiVersion: v1
kind: Secret
metadata:
  name: db-password
  namespace: crud-app
type: Opaque
data:
  db-password: QTFiMkMhZGUz

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: crud-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-password
              key: db-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgres-storage
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: crud-app
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: crud-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      containers:
      - name: backend-api
        image: final_assignment-backend
        imagePullPolicy: Never
        env:
        - name: db_address
          value: "postgres"
        - name: db_username
          value: "postgres"
        - name: db_name
          value: "postgres"
        - name: db_password
          valueFrom:
            secretKeyRef:
              name: db-password
              key: db-password
        ports:
        - containerPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: backend-api
  namespace: crud-app
spec:
  selector:
    app: backend-api
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  namespace: crud-app
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/postgres"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: crud-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
